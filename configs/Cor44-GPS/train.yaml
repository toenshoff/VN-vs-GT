out_dir: results/ER-GPS
metric_best: loss
metric_agg: argmin
wandb:
  use: True
  project: ER
dataset:
  format: PyG-ERTrain
  name: subset
  task: graph
  task_type: regression
  transductive: False
  node_encoder: True
  node_encoder_name: TypeDictNode+LapPE
  node_encoder_num_types: 1
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: TypeDictEdge
  edge_encoder_num_types: 1
  edge_encoder_bn: False
posenc_LapPE:
  enable: True
  eigen:
    laplacian_norm: none
    eigvec_norm: L2
    max_freqs: 8
  model: DeepSet
  dim_pe: 8
  layers: 2
  raw_norm_type: none
train:
  mode: custom
  batch_size: 200
  eval_period: 1
  ckpt_period: 5
  ckpt_best: True
model:
  type: GPSModel
  loss_fun: l1
  edge_decoding: dot
  graph_pooling: add
gt:
  layer_type: GCN+Transformer  # CustomGatedGCN+Performer
  layers: 3
  n_heads: 4
  dim_hidden: 256  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.0
  attn_dropout: 0.0
  layer_norm: False
  batch_norm: True
gnn:
  head: mlp_graph
  layers_pre_mp: 0
  layers_post_mp: 2
  dim_inner: 256
  layer_type: gcnconv
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 0.0
  base_lr: 0.0001
  max_epoch: 100
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5
